#testcase: streams compile-dsl --input-datafile testcases/test_stream_compileDSL.txt
REQUEST URL:streams/v2beta1/pipelines/compile-dsl
REQUEST BODY:{{"dsl":"events = read-splunk-firehose(); write-index(events,\"module:index\",\"dataset:main\");"}}

#testcase: streams create-pipeline --input-datafile testcases/test_stream_create_pipeline.txt
REQUEST URL:streams/v2beta1/pipelines
REQUEST BODY:{{"data":{"edges":[{"sourceNode":"e3f9eb13-a847-4717-9f83-89c815b03d01","sourcePort":"output","targetNode":"6f14bd4d-e299-4677-b5db-441b40acd501","targetPort":"input"}],"nodes":[{"attributes":{},"id":"e3f9eb13-a847-4717-9f83-89c815b03d01","op":"read-splunk-firehose","resolvedId":"read-splunk-firehose"},{"attributes":{},"dataset":"dataset:main","id":"6f14bd4d-e299-4677-b5db-441b40acd501","module":"module:index","op":"write-index","resolvedId":"write-index:collection\u003crecord\u003cR\u003e\u003e:expression\u003cstring\u003e:expression\u003cstring\u003e"}],"rootNode":["6f14bd4d-e299-4677-b5db-441b40acd501"]},"name":"passthrough","bypassValidation":true,"createUserId":"test@splunk.com","description":"A passthrough pipeline"}}

#testcase: streams merge-pipelines --input-datafile testcases/test_stream_merge_pipelines.txt
REQUEST URL:streams/v2beta1/pipelines/merge
REQUEST BODY:{{"inputTree":{"edges":null,"nodes":null,"rootNode":null},"mainTree":{"edges":null,"nodes":null,"rootNode":null},"targetNode":"","targetPort":""}}

#testcase: streams list-pipelines
REQUEST URL:streams/v2beta1/pipelines
REQUEST BODY:<nil>

#testcase: streams get-pipeline --id 280afcdd-cca1-4cff-b643-9d3295a70075
REQUEST URL:streams/v2beta1/pipelines/280afcdd-cca1-4cff-b643-9d3295a70075
REQUEST BODY:<nil>

#testcase: streams get-pipelines-status
REQUEST URL:streams/v2beta1/pipelines/status
REQUEST BODY:<nil>

#testcase: streams activate-pipeline --id 280afcdd-cca1-4cff-b643-9d3295a70075
REQUEST URL:streams/v2beta1/pipelines/280afcdd-cca1-4cff-b643-9d3295a70075/activate
REQUEST BODY:{{}}

#testcase: streams deactivate-pipeline --id 280afcdd-cca1-4cff-b643-9d3295a70075
REQUEST URL:streams/v2beta1/pipelines/280afcdd-cca1-4cff-b643-9d3295a70075/deactivate
REQUEST BODY:{{}}

#testcase: streams list-connectors
REQUEST URL:streams/v2beta1/connectors
REQUEST BODY:<nil>

#testcase: streams list-connections
REQUEST URL:streams/v2beta1/connections
REQUEST BODY:<nil>

#testcase: streams delete-pipeline --id 280afcdd-cca1-4cff-b643-9d3295a70075
REQUEST URL:streams/v2beta1/pipelines/280afcdd-cca1-4cff-b643-9d3295a70075
REQUEST BODY:<nil>

#testcase: streams create-connection --connector-id "879837b0-cabf-4bc2-8589-fcc4dad753e7" --data "{\"splunk-url\":\"https://hostname.port\", \"token\":\"mytoken\"}" --description "newconnection" --name "myconnection"
enable testhook-dryrun
error parsing "data": flags.ParseFlag: failure to unmarshal to type map[string]interface {} err: unexpected end of JSON input

#testcase: streams update-connection --connection-id 6c7896b2-a53c-4078-b757-07e80739d91e --name "newname"
REQUEST URL:streams/v2beta1/connections/6c7896b2-a53c-4078-b757-07e80739d91e
REQUEST BODY:{{"name":"\"newname\""}}

#testcase: streams delete-connection --connection-id 6c7896b2-a53c-4078-b757-07e80739d91e
REQUEST URL:streams/v2beta1/connections/6c7896b2-a53c-4078-b757-07e80739d91e
REQUEST BODY:<nil>

#testcase: streams get-registry --local false
REQUEST URL:streams/v2beta1/pipelines/registry?local=false
REQUEST BODY:<nil>

#testcase: streams create-template --input-datafile testcases/test_stream_create_template.txt
REQUEST URL:streams/v2beta1/templates
REQUEST BODY:{{"data":{"edges":[{"sourceNode":"09fb131c-676b-49f7-a72f-28a0f6aa9bdb","sourcePort":"output","targetNode":"188a56ab-0a8a-4af0-8cfc-68fd57d1b683","targetPort":"input"}],"nodes":[{"attributes":{},"id":"09fb131c-676b-49f7-a72f-28a0f6aa9bdb","op":"read-splunk-firehose"},{"attributes":{},"id":"188a56ab-0a8a-4af0-8cfc-68fd57d1b683","op":"write-splunk-index"}],"rootNode":null},"description":"testTemplate description","name":"testTemplate"}}

#testcase: streams list-templates
REQUEST URL:streams/v2beta1/templates
REQUEST BODY:<nil>

#testcase: streams get-template --template-id "a9b0496e-ef7c-11e9-81b4-2a2ae2dbcce4"
REQUEST URL:streams/v2beta1/templates/%22a9b0496e-ef7c-11e9-81b4-2a2ae2dbcce4%22
REQUEST BODY:<nil>

