Use Splunk Cloud CLI commands with the App Registry service to create and manage
apps for Splunk Cloud.


SYNTAX

    scloud [-u <username>] [-p <password>] [-tenant <tenant>] [-no-prompt] 
        appreg <subcommand> [params]



SUBCOMMANDS
  
    create-app <app> web|native|service [-login-url <url>] [-redirect-urls <url, ...>]
    [-logo-url <url>] [-title <title>] [-description <description>] [-setup-url <url>]
    [-webhook-url <url>] [-app-principal-permissions <permissions, ...>] 
    [-user-permissions-filter <permissions, ...>]
        Create a new app.

        Arguments:
            <app>
                The name of the app.

            web|native|service
                The type of app to create.

            -login-url <url>
                Defines the login URLs, required for web apps.

            -redirect-urls <url, ...>
                Defines the login redirect URLs, required for web and native apps.

            -logo-url <url>
                The URL of the app logo.

            -title <title>
                A friendly name for the app.

            -description <description>
                A short paragraph that describes the app.
            
            -setup-url <url>
                The URL to redirect to after a subscription is created.

            -webhook-url <url>
                The URL that webhook events are sent to when creating or deleting a subscription. 

            -app-principal-permissions <permissions, ...>
                An array of permission templates that are used to grant permission to the app principal 
                when a tenant subscribes. Permission templates do not include the tenant name, 
                only the resource name and the scopes, and should be of the form "<resource-name>:<scope>" 
                where a tenant name is appended when the subscription is created.

            -user-permissions-filter <permissions, ...>
                An array of permission filter templates that are used to intersect with a user's permissions
                when using the app. Permission templates do not include the tenant name, 
                only the resource name and the scopes, and should be of the form "<resource-name>:<scope>" 
                where a tenant name is appended when the subscription is created.


    create-subscription <app>
        Subscribe to the specified app.

        Arguments: 
            <app>
                The name of the app. 

    delete-app <app>
        Delete the specified app.

        Arguments: 
            <app>
                The name of the app. 

    delete-subscription <app>
        Unsubscribe from the specified app.

        Arguments: 
            <app>
                The name of the app. 

    get-app <app>
        Display the specified app.

        Arguments: 
            <app>
                The name of the app. 

    get-spec-json
        Display the OpenAPI spec for the App Registry service in JSON format.

    get-spec-yaml
        Display the OpenAPI spec for the App Registry service in YAML format.

    get-subscription <app>
        Display the subscription for the specified app.

        Arguments: 
            <app>
                The name of the app. 

    list-apps
        List apps defined in the current tenant.

    list-subscriptions
        List app subscriptions.

    rotate-secret <app>
        Rotate the client secret for the specified app.

        Arguments: 
            <app>
                The name of the app. 

    update-app <app> [-login-url <url>] [-redirect-urls <url, ...>]
    [-logo-url <url>] [-title <title>] [-description <description>] [-setup-url <url>]
    [-webhook-url <url>] [-app-principal-permissions <permissions, ...>] 
    [-user-permissions-filter <permissions, ...>]
        Update the specified app.

        Arguments: 
            <app>
                The name of the app. Must be globally unique.

            -login-url <url>
                Redefine the login URLs. This option is only for web apps.

            -redirect-urls <url,..>
                Redefine the login redirect URLs for web or native apps.

            -logo-url <url>
                The URL of the app logo.

            -title <title>
                A friendly name for the app. Must be globally unique.

            -description <description>
                A short paragraph that describes the app.

            -setup-url <url>
                The URL to redirect to after a subscription is created.

            -webhook-url <url>
                The URL that webhook events are sent to when creating or deleting a subscription. 

            -app-principal-permissions <permissions, ...>
                An array of permission templates that are used to grant permission to the app principal 
                when a tenant subscribes. Permission templates do not include the tenant name, 
                only the resource name and the scopes, and should be of the form "<resource-name>:<scope>" 
                where a tenant name is appended when the subscription is created.

            -user-permissions-filter <permissions, ...>
                An array of permission filter templates that are used to intersect with a user's permissions
                when using the app. Permission templates do not include the tenant name, 
                only the resource name and the scopes, and should be of the form "<resource-name>:<scope>" 
                where a tenant name is appended when the subscription is created.


EXAMPLES

    Create a new app:
        $ scloud appreg create-app testapp web -login-url http://foo.com -redirect-urls https://redirect1.com,https://redirect2.com -logo-url http://logourl.com -title mytitle -description mydescription -setup-url https://setupurl.com -webhook-url https://webhookurl.com -app-principal-permissions resource1:scope1.scope2,resource2:scope* -user-permissions-filter resource1:scope1.scope2,resource3*:scope*
        {
            "name": "testapp",
            "kind": "web",
            "title": "mytitle",
            "description": "mydescription",
            "logoUrl": "http://logourl.com",
            "loginUrl": "http://foo.com",
            "redirectUrls": [
                "https://redirect1.com",
                "https://redirect2.com"
            ],
            "appPrincipalPermissions": [
                "resource1:scope1.scope2",
                "resource2:scope*"
            ],
            "userPermissionsFilter": [
                "resource1:scope1.scope2",
                "resource3*:scope*"
            ],
            "setupUrl": "http://setupurl.com",
            "webhookUrl": "http://webhookurl.com",
            "clientId": "32s1e3",
            "clientSecret": "8qcsaUES7Pf",
            "createdOn": "0001-01-01T00:00:00.000Z",
            "createdBy": "xyz@splunk.com"
        }

    Get an app by name: 
        $ scloud appreg get-app testapp
        {
            "name": "testapp",
            "kind": "web",
            "title": "mytitle",
            "description": "mydescription",
            "logoUrl": "http://logourl.com",
            "loginUrl": "http://foo.com",
            "redirectUrls": [
                "https://redirect1.com",
                "https://redirect2.com"
            ],
            "appPrincipalPermissions": [
                "resource1:scope1.scope2",
                "resource2:scope*"
            ],
            "userPermissionsFilter": [
                "resource1:scope1.scope2",
                "resource3*:scope*"
            ],
            "setupUrl": "http://setupurl.com",
            "webhookUrl": "http://webhookurl.com",
            "clientId": "32s1e3",
            "createdOn": "0001-01-01T00:00:00.000Z",
            "createdBy": "xyz@splunk.com"
        }

    List all apps: 
        $ scloud appreg list-apps
        [
            {
                "name": "testapp",
                "kind": "web",
                "title": "mytitle",
                "description": "mydescription",
                "logoUrl": "http://logourl.com",
                "loginUrl": "http://foo.com",
                "appPrincipalPermissions": [
                    "resource1:scope1.scope2",
                    "resource2:scope*"
                ],
                "userPermissionsFilter": [
                    "resource1:scope1.scope2",
                    "resource3*:scope*"
                ],
                "setupUrl": "http://setupurl.com",
                "webhookUrl": "http://webhookurl.com",
                "clientId": "32s1e3",
                "createdOn": "0001-01-01T00:00:00.000Z",
                "createdBy": "xyz@splunk.com"
            },
            {
                "name": "testapp1",
                "kind": "web",
                "title": "mytitle1",
                "description": "mydescription",
                "logoUrl": "http://logourl.com",
                "loginUrl": "http://foo.com",
                "clientId": "32s1e3",
                "createdOn": "0001-01-01T00:00:00.000Z",
                "createdBy": "xyz@splunk.com"
            }
        ]

    Update an existing app: 
        $ scloud appreg update-app testapp -login-url http://updated.foo.com -redirect-urls https://updated.redirect1.com,https://updated.redirect2.com -logo-url http://updated.logourl.com -title updatedtitle1 -description updated_description1 -setup-url https://updated.setupurl.com -webhook-url https://updated.webhookurl.com -app-principal-permissions resource1:updatedscope1.updatedscope2,resource2:updatedscope* -user-permissions-filter resource1:updatedscope1.updatedscope2,resource3*:updatedscope*
        {
            "name": "testapp",
            "kind": "web",
            "title": "updatedtitle1",
            "description": "updated_description1",
            "logoUrl": "http://updated.logourl.com",
            "loginUrl": "http://updated.foo.com",
            "redirectUrls": [
                "https://updated.redirect1.com",
                "https://updated.redirect2.com"
            ],
            "appPrincipalPermissions": [
                "resource1:updatedscope1.updatedscope2",
                "resource2:updatedscope*"
            ],
            "userPermissionsFilter": [
                "resource1:updatedscope1.updatedscope2",
                "resource3*:updatedscope*"
            ],
            "setupUrl": "http://updated.setupurl.com",
            "webhookUrl": "http://updated.webhookurl.com",
            "clientId": "32s1e3",
            "clientSecret": "8qcsaUES7Pf",
            "createdOn": "0001-01-01T00:00:00.000Z",
            "createdBy": "xyz@splunk.com"
        }

    Delete an app: 
        $ scloud appreg delete-app testapp1

    Rotate the client secret for the specified app: 
        $ scloud appreg rotate-secret testapp
       {
            "name": "testapp",
            "kind": "web",
            "title": "updatedtitle1",
            "description": "updated_description1",
            "logoUrl": "http://updated.logourl.com",
            "loginUrl": "http://updated.foo.com",
            "redirectUrls": [
                "https://updated.redirect1.com",
                "https://updated.redirect2.com"
            ],
            "appPrincipalPermissions": [
                "resource1:updatedscope1.updatedscope2",
                "resource2:updatedscope*"
            ],
            "userPermissionsFilter": [
                "resource1:updatedscope1.updatedscope2",
                "resource3*:updatedscope*"
            ],
            "setupUrl": "http://updated.setupurl.com",
            "webhookUrl": "http://updated.webhookurl.com",
            "clientId": "32s1e3",
            "clientSecret": "8sdbJHB5KJ",
            "createdOn": "0001-01-01T00:00:00.000Z",
            "createdBy": "xyz@splunk.com"
        }

    Subscribe to the specified app: 
        $ scloud appreg create-subscription testapp
        Ok

    List app subscriptions: 
        $ scloud appreg list-subscriptions
        [
            {
                "appName": "testapp",
                "title": "mytitle",
                "description": "mydescription",
                "logoUrl": "http://logourl.com",
                "loginURL": "http://foo.com",
                "createdOn": "0001-01-01T00:00:00.000Z",
                "createdBy": "xyz@splunk.com"
            }
        ]

    Display the subscription for the specified app: 
        $ scloud appreg get-subscription testapp
        {
            "appName": "testapp",
            "title": "mytitle",
            "description": "mydescription",
            "logoUrl": "http://logourl.com",
            "loginURL": "http://foo.com",
            "createdOn": "0001-01-01T00:00:00.000Z",
            "createdBy": "xyz@splunk.com"
        }

    Unsubscribe from the specified app: 
        $ scloud appreg delete-subscription testapp
