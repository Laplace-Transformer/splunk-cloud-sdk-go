// Package collect -- generated by scloudgen
// !! DO NOT EDIT !!
//
package collect

import (
	"github.com/spf13/cobra"
	impl "github.com/splunk/splunk-cloud-sdk-go/scloud_generated/pkg/collect"
)

// createJob -- This API returns `403` if the number of collect workers is over a certain limit.
var createJobCmd = &cobra.Command{
	Use:   "create-job",
	Short: "This API returns `403` if the number of collect workers is over a certain limit.",
	RunE:  impl.CreateJob,
}

// deleteJob --
var deleteJobCmd = &cobra.Command{
	Use:   "delete-job",
	Short: "",
	RunE:  impl.DeleteJob,
}

// deleteJobs --
var deleteJobsCmd = &cobra.Command{
	Use:   "delete-jobs",
	Short: "",
	RunE:  impl.DeleteJobs,
}

// getJob --
var getJobCmd = &cobra.Command{
	Use:   "get-job",
	Short: "",
	RunE:  impl.GetJob,
}

// listJobs --
var listJobsCmd = &cobra.Command{
	Use:   "list-jobs",
	Short: "",
	RunE:  impl.ListJobs,
}

// patchJob -- This API returns `403` if the number of collect workers is over a certain limit.
var patchJobCmd = &cobra.Command{
	Use:   "patch-job",
	Short: "This API returns `403` if the number of collect workers is over a certain limit.",
	RunE:  impl.PatchJob,
}

// patchJobs -- This is a non-atomic operation and the results are returned as a list with each job patch result as its element. This API returns `200 OK` regardless of how many jobs were successfully patched. You must read the response body to find out if all jobs are patched. When the API is called, the `jobIDs` or `connectorID` must be specified. Do not specify more than one of them at the same time. This API returns `403` if the number of collect workers is over a certain limit.
var patchJobsCmd = &cobra.Command{
	Use:   "patch-jobs",
	Short: "This is a non-atomic operation and the results are returned as a list with each job patch result as its element. This API returns `200 OK` regardless of how many jobs were successfully patched. You must read the response body to find out if all jobs are patched. When the API is called, the `jobIDs` or `connectorID` must be specified. Do not specify more than one of them at the same time. This API returns `403` if the number of collect workers is over a certain limit.",
	RunE:  impl.PatchJobs,
}

func init() {

	collectCmd.AddCommand(createJobCmd)
	collectCmd.AddCommand(deleteJobCmd)
	collectCmd.AddCommand(deleteJobsCmd)
	collectCmd.AddCommand(getJobCmd)
	collectCmd.AddCommand(listJobsCmd)
	collectCmd.AddCommand(patchJobCmd)
	collectCmd.AddCommand(patchJobsCmd)

	// subTest1Cmd.Flags().StringP("id", "i", "", "resource identifier")
	// subTest2Cmd.Flags().StringP("id", "i", "", "resource identifier")
}
