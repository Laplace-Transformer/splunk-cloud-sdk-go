// Package streams -- generated by scloudgen
// !! DO NOT EDIT !!
//
package streams

import (
	"github.com/spf13/cobra"
	impl "github.com/splunk/splunk-cloud-sdk-go/scloud_generated/pkg/streams"
)

// activatePipeline --
var activatePipelineCmd = &cobra.Command{
	Use:   "activate-pipeline",
	Short: "",
	RunE:  impl.ActivatePipeline,
}

// compileDSL --
var compileDSLCmd = &cobra.Command{
	Use:   "compile-dsl",
	Short: "",
	RunE:  impl.CompileDSL,
}

// compileSPL --
var compileSPLCmd = &cobra.Command{
	Use:   "compile-spl",
	Short: "",
	RunE:  impl.CompileSPL,
}

// createConnection --
var createConnectionCmd = &cobra.Command{
	Use:   "create-connection",
	Short: "",
	RunE:  impl.CreateConnection,
}

// createGroup --
var createGroupCmd = &cobra.Command{
	Use:   "create-group",
	Short: "",
	RunE:  impl.CreateGroup,
}

// createPipeline --
var createPipelineCmd = &cobra.Command{
	Use:   "create-pipeline",
	Short: "",
	RunE:  impl.CreatePipeline,
}

// createTemplate --
var createTemplateCmd = &cobra.Command{
	Use:   "create-template",
	Short: "",
	RunE:  impl.CreateTemplate,
}

// deactivatePipeline --
var deactivatePipelineCmd = &cobra.Command{
	Use:   "deactivate-pipeline",
	Short: "",
	RunE:  impl.DeactivatePipeline,
}

// deleteConnection --
var deleteConnectionCmd = &cobra.Command{
	Use:   "delete-connection",
	Short: "",
	RunE:  impl.DeleteConnection,
}

// deleteGroup --
var deleteGroupCmd = &cobra.Command{
	Use:   "delete-group",
	Short: "",
	RunE:  impl.DeleteGroup,
}

// deletePipeline --
var deletePipelineCmd = &cobra.Command{
	Use:   "delete-pipeline",
	Short: "",
	RunE:  impl.DeletePipeline,
}

// deleteTemplate --
var deleteTemplateCmd = &cobra.Command{
	Use:   "delete-template",
	Short: "",
	RunE:  impl.DeleteTemplate,
}

// expandGroup --
var expandGroupCmd = &cobra.Command{
	Use:   "expand-group",
	Short: "",
	RunE:  impl.ExpandGroup,
}

// expandPipeline --
var expandPipelineCmd = &cobra.Command{
	Use:   "expand-pipeline",
	Short: "",
	RunE:  impl.ExpandPipeline,
}

// getGroup --
var getGroupCmd = &cobra.Command{
	Use:   "get-group",
	Short: "",
	RunE:  impl.GetGroup,
}

// getInputSchema --
var getInputSchemaCmd = &cobra.Command{
	Use:   "get-input-schema",
	Short: "",
	RunE:  impl.GetInputSchema,
}

// getOutputSchema --
var getOutputSchemaCmd = &cobra.Command{
	Use:   "get-output-schema",
	Short: "",
	RunE:  impl.GetOutputSchema,
}

// getPipeline --
var getPipelineCmd = &cobra.Command{
	Use:   "get-pipeline",
	Short: "",
	RunE:  impl.GetPipeline,
}

// getPipelineLatestMetrics --
var getPipelineLatestMetricsCmd = &cobra.Command{
	Use:   "get-pipeline-latest-metrics",
	Short: "",
	RunE:  impl.GetPipelineLatestMetrics,
}

// getPipelinesStatus --
var getPipelinesStatusCmd = &cobra.Command{
	Use:   "get-pipelines-status",
	Short: "",
	RunE:  impl.GetPipelinesStatus,
}

// getPreviewData --
var getPreviewDataCmd = &cobra.Command{
	Use:   "get-preview-data",
	Short: "",
	RunE:  impl.GetPreviewData,
}

// getPreviewSession --
var getPreviewSessionCmd = &cobra.Command{
	Use:   "get-preview-session",
	Short: "",
	RunE:  impl.GetPreviewSession,
}

// getPreviewSessionLatestMetrics --
var getPreviewSessionLatestMetricsCmd = &cobra.Command{
	Use:   "get-preview-session-latest-metrics",
	Short: "",
	RunE:  impl.GetPreviewSessionLatestMetrics,
}

// getRegistry --
var getRegistryCmd = &cobra.Command{
	Use:   "get-registry",
	Short: "",
	RunE:  impl.GetRegistry,
}

// getTemplate --
var getTemplateCmd = &cobra.Command{
	Use:   "get-template",
	Short: "",
	RunE:  impl.GetTemplate,
}

// listConnections --
var listConnectionsCmd = &cobra.Command{
	Use:   "list-connections",
	Short: "",
	RunE:  impl.ListConnections,
}

// listConnectors --
var listConnectorsCmd = &cobra.Command{
	Use:   "list-connectors",
	Short: "",
	RunE:  impl.ListConnectors,
}

// listPipelines --
var listPipelinesCmd = &cobra.Command{
	Use:   "list-pipelines",
	Short: "",
	RunE:  impl.ListPipelines,
}

// listTemplates --
var listTemplatesCmd = &cobra.Command{
	Use:   "list-templates",
	Short: "",
	RunE:  impl.ListTemplates,
}

// mergePipelines --
var mergePipelinesCmd = &cobra.Command{
	Use:   "merge-pipelines",
	Short: "",
	RunE:  impl.MergePipelines,
}

// putConnection --
var putConnectionCmd = &cobra.Command{
	Use:   "put-connection",
	Short: "",
	RunE:  impl.PutConnection,
}

// putGroup --
var putGroupCmd = &cobra.Command{
	Use:   "put-group",
	Short: "",
	RunE:  impl.PutGroup,
}

// putTemplate --
var putTemplateCmd = &cobra.Command{
	Use:   "put-template",
	Short: "",
	RunE:  impl.PutTemplate,
}

// reactivatePipeline --
var reactivatePipelineCmd = &cobra.Command{
	Use:   "reactivate-pipeline",
	Short: "",
	RunE:  impl.ReactivatePipeline,
}

// startPreview --
var startPreviewCmd = &cobra.Command{
	Use:   "start-preview",
	Short: "",
	RunE:  impl.StartPreview,
}

// stopPreview --
var stopPreviewCmd = &cobra.Command{
	Use:   "stop-preview",
	Short: "",
	RunE:  impl.StopPreview,
}

// updateConnection --
var updateConnectionCmd = &cobra.Command{
	Use:   "update-connection",
	Short: "",
	RunE:  impl.UpdateConnection,
}

// updateGroup --
var updateGroupCmd = &cobra.Command{
	Use:   "update-group",
	Short: "",
	RunE:  impl.UpdateGroup,
}

// updatePipeline --
var updatePipelineCmd = &cobra.Command{
	Use:   "update-pipeline",
	Short: "",
	RunE:  impl.UpdatePipeline,
}

// updateTemplate --
var updateTemplateCmd = &cobra.Command{
	Use:   "update-template",
	Short: "",
	RunE:  impl.UpdateTemplate,
}

// validatePipeline --
var validatePipelineCmd = &cobra.Command{
	Use:   "validate-pipeline",
	Short: "",
	RunE:  impl.ValidatePipeline,
}

func init() {

	streamsCmd.AddCommand(activatePipelineCmd)
	streamsCmd.AddCommand(compileDSLCmd)
	streamsCmd.AddCommand(compileSPLCmd)
	streamsCmd.AddCommand(createConnectionCmd)
	streamsCmd.AddCommand(createGroupCmd)
	streamsCmd.AddCommand(createPipelineCmd)
	streamsCmd.AddCommand(createTemplateCmd)
	streamsCmd.AddCommand(deactivatePipelineCmd)
	streamsCmd.AddCommand(deleteConnectionCmd)
	streamsCmd.AddCommand(deleteGroupCmd)
	streamsCmd.AddCommand(deletePipelineCmd)
	streamsCmd.AddCommand(deleteTemplateCmd)
	streamsCmd.AddCommand(expandGroupCmd)
	streamsCmd.AddCommand(expandPipelineCmd)
	streamsCmd.AddCommand(getGroupCmd)
	streamsCmd.AddCommand(getInputSchemaCmd)
	streamsCmd.AddCommand(getOutputSchemaCmd)
	streamsCmd.AddCommand(getPipelineCmd)
	streamsCmd.AddCommand(getPipelineLatestMetricsCmd)
	streamsCmd.AddCommand(getPipelinesStatusCmd)
	streamsCmd.AddCommand(getPreviewDataCmd)
	streamsCmd.AddCommand(getPreviewSessionCmd)
	streamsCmd.AddCommand(getPreviewSessionLatestMetricsCmd)
	streamsCmd.AddCommand(getRegistryCmd)
	streamsCmd.AddCommand(getTemplateCmd)
	streamsCmd.AddCommand(listConnectionsCmd)
	streamsCmd.AddCommand(listConnectorsCmd)
	streamsCmd.AddCommand(listPipelinesCmd)
	streamsCmd.AddCommand(listTemplatesCmd)
	streamsCmd.AddCommand(mergePipelinesCmd)
	streamsCmd.AddCommand(putConnectionCmd)
	streamsCmd.AddCommand(putGroupCmd)
	streamsCmd.AddCommand(putTemplateCmd)
	streamsCmd.AddCommand(reactivatePipelineCmd)
	streamsCmd.AddCommand(startPreviewCmd)
	streamsCmd.AddCommand(stopPreviewCmd)
	streamsCmd.AddCommand(updateConnectionCmd)
	streamsCmd.AddCommand(updateGroupCmd)
	streamsCmd.AddCommand(updatePipelineCmd)
	streamsCmd.AddCommand(updateTemplateCmd)
	streamsCmd.AddCommand(validatePipelineCmd)

	// subTest1Cmd.Flags().StringP("id", "i", "", "resource identifier")
	// subTest2Cmd.Flags().StringP("id", "i", "", "resource identifier")
}
